{"remainingRequest":"/Users/yanagi/chatapp/live-chat-rails/node_modules/babel-loader/lib/index.js!/Users/yanagi/chatapp/live-chat-rails/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/yanagi/chatapp/live-chat-rails/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanagi/chatapp/live-chat-rails/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yanagi/chatapp/live-chat-rails/src/views/Chatroom.vue?vue&type=template&id=5f0fe8ed","dependencies":[{"path":"/Users/yanagi/chatapp/live-chat-rails/src/views/Chatroom.vue","mtime":1638956394240},{"path":"/Users/yanagi/chatapp/live-chat-rails/babel.config.js","mtime":1637909021919},{"path":"/Users/yanagi/chatapp/live-chat-rails/node_modules/cache-loader/dist/cjs.js","mtime":1637908768660},{"path":"/Users/yanagi/chatapp/live-chat-rails/node_modules/babel-loader/lib/index.js","mtime":1637908770962},{"path":"/Users/yanagi/chatapp/live-chat-rails/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1637908771736},{"path":"/Users/yanagi/chatapp/live-chat-rails/node_modules/cache-loader/dist/cjs.js","mtime":1637908768660},{"path":"/Users/yanagi/chatapp/live-chat-rails/node_modules/vue-loader-v16/dist/index.js","mtime":1637908768201}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImNvbnRhaW5lciIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9OYXZiYXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiTmF2YmFyIik7CgogIHZhciBfY29tcG9uZW50X0NoYXRXaW5kb3cgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ2hhdFdpbmRvdyIpOwoKICB2YXIgX2NvbXBvbmVudF9OZXdDaGF0Rm9ybSA9IF9yZXNvbHZlQ29tcG9uZW50KCJOZXdDaGF0Rm9ybSIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfTmF2YmFyKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ2hhdFdpbmRvdywgewogICAgb25Db25uZWN0Q2FibGU6ICRvcHRpb25zLmNvbm5lY3RDYWJsZSwKICAgIG1lc3NhZ2VzOiAkb3B0aW9ucy5mb3JtYXR0ZWRNZXNzYWdlcywKICAgIHJlZjogImNoYXRXaW5kb3ciCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIm9uQ29ubmVjdENhYmxlIiwgIm1lc3NhZ2VzIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9OZXdDaGF0Rm9ybSwgewogICAgb25Db25uZWN0Q2FibGU6ICRvcHRpb25zLmNvbm5lY3RDYWJsZQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvbkNvbm5lY3RDYWJsZSJdKV0pOwp9"},{"version":3,"sources":["/Users/yanagi/chatapp/live-chat-rails/src/views/Chatroom.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;;;;;;uBAAX,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHJ,YAAA,CAAU,iBAAV,CAGI,EAFJ,YAAA,CAA0F,qBAA1F,EAA0F;AAA7E,IAAA,cAAY,EAAE,QAAA,CAAA,YAA+D;AAAhD,IAAA,QAAQ,EAAE,QAAA,CAAA,iBAAsC;AAAnB,IAAA,GAAG,EAAC;AAAe,GAA1F,E,IAAA,E;;AAAA,I,8BAAA,CAEI,EADJ,YAAA,CAA2C,sBAA3C,EAA2C;AAA7B,IAAA,cAAY,EAAE,QAAA,CAAA;AAAe,GAA3C,EAAwC,IAAxC,EAAwC;AAAA;AAAxC,IAAwC,CAAA,gBAAA,CAAxC,CACI,CAJN,C","sourcesContent":["<template>\n  <div class=\"container\">\n    <Navbar />\n    <ChatWindow @connectCable=\"connectCable\" :messages=\"formattedMessages\" ref=\"chatWindow\" />\n    <NewChatForm @connectCable=\"connectCable\"/>\n  </div>\n</template>\n\n<script>\nimport Navbar from '../components/Navbar'\nimport ChatWindow from '../components/ChatWindow'\nimport NewChatForm from '../components/NewChatForm'\nimport axios from 'axios'\nimport ActionCable from 'actioncable'\nimport { formatDistanceToNow } from 'date-fns'\nimport { ja } from 'date-fns/locale'\n\nexport default {\n  components: { Navbar, ChatWindow, NewChatForm },\n  data () {\n    return {\n      messages: [],\n    }\n  },\n  computed: {\n    formattedMessages() {\n      if (!this.messages.length) { return [] }\n      return this.messages.map(message => {\n        let time = formatDistanceToNow(new Date(message.created_at), { locale: ja })\n        return { ...message, created_at: time }\n      })\n    }\n  },\n  methods: {\n    async getMessages () {\n      try {\n        const res = await axios.get('http://localhost:3000/messages', {\n          headers: {\n            uid: window.localStorage.getItem('uid'),\n            \"access-token\": window.localStorage.getItem('access-token'),\n            client:window.localStorage.getItem('client')\n          }\n        })\n        if (!res) {\n          new Error('メッセージ一覧を取得できませんでした')\n        }\n        this.messages = res.data\n      } catch (err) {\n        console.log(err)\n      }\n    },\n\n    connectCable (message) {\n      this.messageChannel.perform('receive', {\n        message: message,\n        email: window.localStorage.getItem('uid')\n      })\n    }\n  },\n  mounted() {\n    const cable = ActionCable.createConsumer('ws://localhost:3000/cable')\n    this.messageChannel = cable.subscriptions.create('RoomChannel', {\n      connected: () => {\n        this.getMessages().then(() => {\n          this.$refs.chatWindow.scrollToBottom()\n        })\n      },\n      received: () => {\n        this.getMessages().then(() => {\n          this.$refs.chatWindow.scrollToBottom()\n        })\n      }\n    })\n  },\n  beforeUnmount () {\n    this.messageChannel.unsubscribe()\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>\n"],"sourceRoot":""}]}